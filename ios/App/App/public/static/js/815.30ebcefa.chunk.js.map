{"version":3,"file":"static/js/815.30ebcefa.chunk.js","mappings":"gNAIaA,EAAO,0CAClB,mBAMI,OANJ,gBACE,gBA4BMC,uBAAyB,WAC/B,IAAMC,EAAO,CACXC,UAA8B,IAApBC,SAASC,QAGrB,EAAKC,gBAAgB,iBAAkBJ,GACnCE,SAASC,OACX,EAAKC,gBAAgB,QAAS,MAE9B,EAAKA,gBAAgB,SAAU,KAEnC,EAtCEF,SAASG,iBACP,mBACA,EAAKN,wBACL,GACA,CACJ,CAoBC,OApBA,+BAED,WACE,MAAMO,KAAKC,cAAc,0BAC3B,GAAC,8DAED,yFACQD,KAAKC,cAAc,2BAA0B,gDACpD,kDAJA,IAIA,mEAED,4GACS,CAAEC,IAAK,KAAI,2CACnB,kDAJA,IAIA,+DAED,4GACS,CAAEP,UAA8B,IAApBC,SAASC,SAAiB,2CAC9C,kDAJA,IAIA,kEAED,yFACQG,KAAKC,cAAc,2BAA0B,gDACpD,kDAJA,MAIA,EA5BiB,C,QAAQE,G","sources":["../node_modules/@capacitor/app/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { AppInfo, AppPlugin, AppLaunchUrl, AppState } from './definitions';\n\nexport class AppWeb extends WebPlugin implements AppPlugin {\n  constructor() {\n    super();\n    document.addEventListener(\n      'visibilitychange',\n      this.handleVisibilityChange,\n      false,\n    );\n  }\n\n  exitApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getInfo(): Promise<AppInfo> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  async getLaunchUrl(): Promise<AppLaunchUrl> {\n    return { url: '' };\n  }\n\n  async getState(): Promise<AppState> {\n    return { isActive: document.hidden !== true };\n  }\n\n  async minimizeApp(): Promise<void> {\n    throw this.unimplemented('Not implemented on web.');\n  }\n\n  private handleVisibilityChange = () => {\n    const data = {\n      isActive: document.hidden !== true,\n    };\n\n    this.notifyListeners('appStateChange', data);\n    if (document.hidden) {\n      this.notifyListeners('pause', null);\n    } else {\n      this.notifyListeners('resume', null);\n    }\n  };\n}\n"],"names":["AppWeb","handleVisibilityChange","data","isActive","document","hidden","notifyListeners","addEventListener","this","unimplemented","url","WebPlugin"],"sourceRoot":""}